{"ast":null,"code":"var _jsxFileName = \"/home/marius/Documents/School-blog/client/src/context/post/PostState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport PostContext from './postContext';\nimport postReducer from './postReducer';\nimport { GET_POSTS, GET_POST, ADD_POST, DELETE_POST, UPDATE_POST, POST_ERROR, SET_LOADING, SET_CURRENT, CLEAR_CURRENT, LIKE_POST, UNLIKE_POST } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostState = props => {\n  _s();\n  const initialState = {\n    posts: [],\n    current: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(postReducer, initialState);\n\n  // Get all posts\n  const getPosts = async () => {\n    setLoading();\n    try {\n      const res = await axios.get('/api/posts');\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Get a single post\n  const getPost = async id => {\n    setLoading();\n    try {\n      const res = await axios.get(`/api/posts/${id}`);\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Add post\n  const addPost = async post => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/posts', post, config);\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Update post\n  const updatePost = async post => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/posts/${post._id}`, post, config);\n      dispatch({\n        type: UPDATE_POST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Delete post\n  const deletePost = async id => {\n    try {\n      await axios.delete(`/api/posts/${id}`);\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Like post\n  const likePost = async id => {\n    try {\n      const res = await axios.put(`/api/posts/like/${id}`);\n      dispatch({\n        type: LIKE_POST,\n        payload: {\n          id,\n          likes: res.data\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Unlike post\n  const unlikePost = async id => {\n    try {\n      const res = await axios.put(`/api/posts/unlike/${id}`);\n      dispatch({\n        type: UNLIKE_POST,\n        payload: {\n          id,\n          likes: res.data\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Set current post\n  const setCurrent = post => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: post\n    });\n  };\n\n  // Clear current post\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Set loading\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts: state.posts,\n      current: state.current,\n      loading: state.loading,\n      error: state.error,\n      getPosts,\n      getPost,\n      addPost,\n      updatePost,\n      deletePost,\n      setCurrent,\n      clearCurrent,\n      likePost,\n      unlikePost\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(PostState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = PostState;\nexport default PostState;\nvar _c;\n$RefreshReg$(_c, \"PostState\");","map":{"version":3,"names":["React","useReducer","axios","PostContext","postReducer","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","UPDATE_POST","POST_ERROR","SET_LOADING","SET_CURRENT","CLEAR_CURRENT","LIKE_POST","UNLIKE_POST","jsxDEV","_jsxDEV","PostState","props","_s","initialState","posts","current","loading","error","state","dispatch","getPosts","setLoading","res","get","type","payload","data","err","response","msg","getPost","id","addPost","post","config","headers","updatePost","put","_id","deletePost","delete","likePost","likes","unlikePost","setCurrent","clearCurrent","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marius/Documents/School-blog/client/src/context/post/PostState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport PostContext from './postContext';\nimport postReducer from './postReducer';\nimport {\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  POST_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  LIKE_POST,\n  UNLIKE_POST\n} from '../types';\n\nconst PostState = props => {\n  const initialState = {\n    posts: [],\n    current: null,\n    loading: true,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(postReducer, initialState);\n\n  // Get all posts\n  const getPosts = async () => {\n    setLoading();\n    \n    try {\n      const res = await axios.get('/api/posts');\n      dispatch({ type: GET_POSTS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: POST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  // Get a single post\n  const getPost = async id => {\n    setLoading();\n    \n    try {\n      const res = await axios.get(`/api/posts/${id}`);\n      dispatch({ type: GET_POST, payload: res.data });\n    } catch (err) {\n      dispatch({ type: POST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  // Add post\n  const addPost = async post => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/posts', post, config);\n      dispatch({ type: ADD_POST, payload: res.data });\n    } catch (err) {\n      dispatch({ type: POST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  // Update post\n  const updatePost = async post => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/posts/${post._id}`, post, config);\n      dispatch({ type: UPDATE_POST, payload: res.data });\n    } catch (err) {\n      dispatch({ type: POST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  // Delete post\n  const deletePost = async id => {\n    try {\n      await axios.delete(`/api/posts/${id}`);\n      dispatch({ type: DELETE_POST, payload: id });\n    } catch (err) {\n      dispatch({ type: POST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  // Like post\n  const likePost = async id => {\n    try {\n      const res = await axios.put(`/api/posts/like/${id}`);\n      \n      dispatch({\n        type: LIKE_POST,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Unlike post\n  const unlikePost = async id => {\n    try {\n      const res = await axios.put(`/api/posts/unlike/${id}`);\n      \n      dispatch({\n        type: UNLIKE_POST,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Set current post\n  const setCurrent = post => {\n    dispatch({ type: SET_CURRENT, payload: post });\n  };\n\n  // Clear current post\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Set loading\n  const setLoading = () => {\n    dispatch({ type: SET_LOADING });\n  };\n\n  return (\n    <PostContext.Provider\n      value={{\n        posts: state.posts,\n        current: state.current,\n        loading: state.loading,\n        error: state.error,\n        getPosts,\n        getPost,\n        addPost,\n        updatePost,\n        deletePost,\n        setCurrent,\n        clearCurrent,\n        likePost,\n        unlikePost\n      }}\n    >\n      {props.children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}